{"version":3,"sources":["services/contacts.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Header","text","Subheader","Filter","search","handleSearchName","value","onChange","ContactForm","addContact","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","ContactList","searchPhonebook","removeContact","map","contact","key","name","number","onClick","window","confirm","Notification","message","className","Error","App","useState","contacts","setContacts","setNewName","setNewNumber","setSearch","notification","setNotification","error","setError","useEffect","contactService","initialContacts","updateContact","duplicate","updatedNumber","changedContact","returnedContact","setTimeout","catch","filter","toLowerCase","includes","event","target","preventDefault","contactObject","isDuplicate","find","concat","validationError","Object","values","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eeb0dcc.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","import React, { useState, useEffect } from 'react'\r\nimport contactService from './services/contacts'\r\n\r\nconst Header = ({ text }) => {\r\n  return (\r\n    <h2>{text}</h2>\r\n  )\r\n}\r\n\r\nconst Subheader = ({ text }) => {\r\n  return (\r\n    <h3>{text}</h3>\r\n  )\r\n}\r\n\r\nconst Filter = ({ search, handleSearchName }) => {\r\n  return (\r\n    <div>filter: <input value={search} onChange={handleSearchName}/></div>\r\n  )\r\n}\r\n\r\nconst ContactForm = ({ addContact, newName, handleNewName, newNumber, handleNewNumber }) => {\r\n  return (\r\n    <form onSubmit={addContact}>\r\n      <div>name: <input value={newName} onChange={handleNewName}/></div>\r\n      <div>number: <input value={newNumber} onChange={handleNewNumber}/></div>\r\n      <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ContactList = ({ searchPhonebook, removeContact }) => {\r\n  return (\r\n    <div>\r\n      {searchPhonebook.map(contact => \r\n        <p key={contact.name}>{contact.name} {contact.number} <button onClick={() => {if(window.confirm(`Remove ${contact.name}?`)){removeContact(contact.id, contact.name)}}}>Delete</button></p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Error = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const header = 'Phonebook'\r\n  const firstSubheader = 'Add a new contact'\r\n  const secondSubheader = 'Numbers'\r\n\r\n  const [contacts, setContacts] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')  \r\n  const [search, setSearch] = useState('')\r\n  const [notification, setNotification] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    contactService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        setContacts(initialContacts)\r\n      })\r\n  }, [])\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n    const contactObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    const isDuplicate = contacts.find(contact => contact.name === newName)\r\n\r\n    if (isDuplicate) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        updateContact(isDuplicate, isDuplicate.id, newNumber)\r\n      }\r\n    } else {\r\n      contactService\r\n        .create(contactObject)\r\n        .then(returnedContact => {\r\n          setContacts(contacts.concat(returnedContact))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotification(\r\n            `New contact '${newName}' added`\r\n          )\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          const validationError = Object.values(error.response.data)\r\n          setError(\r\n            `Person validation failed: '${validationError}'`\r\n          )\r\n          setTimeout(() => {\r\n            setError(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }  \r\n\r\n  const removeContact = (id, name) => {\r\n    contactService.remove(id)\r\n      .then(res => {\r\n        setContacts(contacts.filter(contact => contact.id !== id))\r\n        setNotification(\r\n          `Removed contact '${name}'`\r\n        )\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const updateContact = (duplicate, id, updatedNumber) => {\r\n    const changedContact = { ...duplicate, number: updatedNumber}\r\n\r\n    contactService\r\n      .update(id, changedContact)\r\n      .then(returnedContact => {\r\n        setContacts(contacts.map(contact => contact.id !== id ? contact : returnedContact))\r\n        setNotification(\r\n          `Updated phone number for '${newName}'`\r\n        )\r\n        setTimeout(() => {\r\n          setNotification(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setError(\r\n          `The contact information for '${duplicate.name}' was already deleted from the server!`\r\n        )\r\n        setTimeout(() => {\r\n          setError(null)\r\n        }, 5000)\r\n        setContacts(contacts.filter(contact => contact.id !== id))\r\n      })\r\n  }\r\n\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n  const searchPhonebook = contacts.filter(contact => contact.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n  return (\r\n    <>\r\n      <Header text={header} />\r\n      <Notification message={notification} />\r\n      <Error message={error} />\r\n      <Filter search={search} handleSearchName={handleSearchName} />\r\n      <Subheader text={firstSubheader} />\r\n      <ContactForm addContact={addContact} newName={newName} handleNewName={handleNewName} newNumber={newNumber} handleNewNumber={handleNewNumber} />\r\n      <Subheader text={secondSubheader} />\r\n      <ContactList searchPhonebook={searchPhonebook} removeContact={removeContact} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}